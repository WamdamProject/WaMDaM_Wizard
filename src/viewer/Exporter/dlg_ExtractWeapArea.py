"""Subclass of dlg_ExtractWeapArea, which is generated by wxFormBuilder."""
import win32com.client

import ExportModels
from viewer.Messages_forms.msg_somethigWrong import msg_somethigWrong
# Implementing dlg_ExtractWeapArea
class dlg_ExtractWeapArea( ExportModels.dlg_ExtractWeapArea ):
	def __init__( self, parent ):
		ExportModels.dlg_ExtractWeapArea.__init__( self, parent )
	# Handlers for dlg_ExtractWeapArea events.
		list_code = []
		WEAP = win32com.client.Dispatch("WEAP.WEAPApplication")
		for area in WEAP.Areas:
			list_code.append(area.name)

		self.comboBox_WEAPArea.SetItems(list_code)
		self.Projection_source = ''


		list_scen = []
		for scen in WEAP.Scenarios:
			list_scen.append(scen.name)

		self.Combo_WEAP_scenario.SetItems(list_scen)

	def comboBox_WEAPAreaOnCombobox( self, event ):
		pass
		# TODO: Implement comboBox_WEAPAreaOnCombobox
		# first, make it as a drop down menu
		# second, get all the WEAP areas
		# WEAP = win32com.client.Dispatch("WEAP.WEAPApplication")
		# for area in WEAP.Areas:
		# 	Area_value = area.name

	def Combo_WEAP_scenarioOnCombobox( self, event ):

		pass


	def ProjectionTextOnText( self, event ):
		self.Projection_source = self.ProjectionText.Value
		pass


	def dirPicker_outputOnDirChanged( self, event ):
		# TODO: Implement dirPicker_outputOnDirChanged
		pass
	
	def btn_cancelOnButtonClick( self, event ):
		self.Destroy()

	
	def btn_extractOnButtonClick( self, event ):

		self.btn_extract.Enabled = False
		try:
			textCtrl_AreaNameOnText = self.comboBox_WEAPArea.Value
			if not textCtrl_AreaNameOnText:
				raise Exception("Select a WEAP Area to extract")

			SelectedScenarioName = self.Combo_WEAP_scenario.Value
			if not SelectedScenarioName:
				raise Exception("Select a WEAP scenario to extract")

			fileDir = self.dirPicker_output.Path
			if not fileDir:
				raise Exception("Select a directory to export the resulting Excel workbook into ")

			from controller.WEAP.ExtractWEAP_ToWaMDaM.ExtractWeapArea import WEAP_export
			weap_Export = WEAP_export(textCtrl_AreaNameOnText, SelectedScenarioName, fileDir)

			WEAP = win32com.client.Dispatch("WEAP.WEAPApplication")
			WEAP.ActiveArea = textCtrl_AreaNameOnText
			WEAP.ActiveScenario = SelectedScenarioName

			result_list, uniqObjectAtt_list = weap_Export.GetWEAPValues()


			weap_Export.SaveToExcel(result_list,uniqObjectAtt_list, self.Projection_source)

			from viewer.Messages_forms.msg_connSQLiteSuccs import msg_connSQLiteSuccs
			msgdlg = msg_connSQLiteSuccs(self)
			msgdlg.setMessage("\n\nSuccessfully, extracted the selected WEAP model network and all of its data into a WaMDaM workbook template")
			msgdlg.ShowModal()

			self.Destroy()
		except Exception as e:
			self.btn_extract.Enabled = True
			msg_somethigWrong(self, e.message).ShowModal()

	
